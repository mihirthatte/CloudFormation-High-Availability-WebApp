Parameters:
  EnvironmentName:
    Description: Environment Name for Web App project
    Type: String

  VpcCIDR:
    Description: IP range for Vpc CIDR
    Type: String

  Private1CIDR:
    Description: IP range for Private1 Subnet CIDR
    Type: String

  Private2CIDR:
    Description: IP range for private2 Subnet CIDR
    Type: String

  Public1CIDR:
    Description: IP range for public1 Subnet CIDR
    Type: String

  Public2CIDR:
    Description: IP range for public2 Subnet CIDR
    Type: String

Resources:
  # - Create a Virtual Public Cloud where all subnets & instances will live -
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # - Create two public Subnets in two AZs
  # - These public subnets will be used for creating Load Balanced
  #   traffic. All EC2 instances will be in Private Subnet and a load
  #   balancer residing in public subnet will talk to those instances.
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Public1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Public1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Public2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Public2


  #Create two Private Subnets in two AZs- 
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Private1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Private1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Private2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Private2

  #Attaching internet Gateway to Public subnet
  WebAppInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  IGatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref WebAppInternetGateway
      VpcId: !Ref VPC

  #Creating Route Tables - 
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Public Routes

  DefaultPublicRoute: 
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WebAppInternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
Outputs:
  VPC:
    Description: Name of VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPCID

  Private1Subnet:
    Description: Private Subnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PRI1

  Private2Subnet:
    Description: Private Subnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PRI2

  Public1Subnet:
    Description: Public Subnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PUB1

  Public2Subnet:
    Description: Public Subnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PUB2

  WebAppInternetGateway:
    Description: Internet Gatway
    Value: !Ref WebAppInternetGateway
    Export:
      Name: !Sub ${AWS::StackName}-IG

  IGatewayAttach:
    Description: Internet Gatway Attachment Resource
    Value: !Ref IGatewayAttach
    Export:
      Name: !Sub ${AWS::StackName}-IGAttach
